namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: UsrRealtyServiceSchema

	/// <exclude/>
	public class UsrRealtyServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UsrRealtyServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UsrRealtyServiceSchema(UsrRealtyServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f968a2a5-8f69-4712-b104-d4f8b8d6256c");
			Name = "UsrRealtyService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b9510dc5-648b-41d0-be0f-dff718daf5ed");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,83,93,111,218,48,20,125,118,126,133,197,83,34,177,104,123,29,235,36,216,160,98,18,31,106,168,120,64,125,48,201,133,70,115,236,212,190,102,139,218,254,247,93,199,41,10,155,218,106,8,1,57,247,248,220,115,207,53,74,84,96,107,145,3,223,128,49,194,234,3,166,223,180,58,148,71,103,4,150,90,241,232,145,71,156,94,206,150,234,200,179,198,34,84,105,6,230,84,230,176,208,5,200,209,59,245,116,11,251,81,196,94,175,143,115,44,79,109,179,51,173,111,198,64,250,125,66,77,254,41,145,46,149,171,138,206,241,75,253,191,219,121,102,6,214,82,139,12,5,2,213,35,182,235,76,208,184,104,68,142,119,4,141,109,189,4,36,209,154,252,236,75,89,98,115,3,15,174,52,80,129,66,27,247,31,188,121,126,197,223,57,226,89,105,7,20,201,29,143,34,86,187,189,44,115,158,75,97,45,191,1,33,177,233,172,240,207,124,34,44,116,79,67,62,167,106,177,82,178,233,155,167,89,105,37,140,237,86,53,132,29,245,38,96,59,154,117,174,78,250,39,196,11,192,123,93,144,197,193,122,149,109,6,67,62,209,69,147,97,35,189,109,162,45,72,84,28,225,140,166,91,35,234,26,138,33,201,48,111,25,44,206,180,169,4,94,240,3,148,254,176,90,13,201,190,173,181,178,240,54,47,241,206,186,177,11,200,203,74,72,126,13,184,209,40,228,184,210,78,225,164,217,52,53,204,139,216,162,241,139,51,109,44,1,27,242,11,112,117,56,128,233,42,222,105,87,164,176,41,250,37,221,231,132,208,71,95,41,15,188,211,75,231,118,233,164,92,153,105,85,99,19,247,213,19,254,244,196,223,96,245,218,121,97,198,94,163,247,12,36,126,63,97,75,140,25,64,103,20,255,240,105,212,62,63,183,159,47,41,24,176,78,250,220,62,142,60,156,129,132,28,185,13,95,87,92,193,47,30,176,248,214,130,161,69,43,250,77,43,15,29,24,221,127,233,42,21,207,156,202,211,204,85,241,224,214,154,181,161,203,51,72,130,219,116,102,116,21,95,134,67,232,246,30,12,180,236,48,218,32,161,105,166,15,78,200,56,72,166,107,97,136,142,96,98,111,226,218,149,197,101,108,47,250,99,85,180,58,189,156,254,67,172,159,110,167,40,108,55,114,155,200,57,160,144,73,58,253,13,185,67,200,114,33,133,249,210,197,248,53,78,66,184,93,214,225,208,200,255,217,216,115,68,239,231,63,95,17,130,155,232,4,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f968a2a5-8f69-4712-b104-d4f8b8d6256c"));
		}

		#endregion

	}

	#endregion

}

